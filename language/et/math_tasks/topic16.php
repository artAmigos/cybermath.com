<?php
session_start();
require_once '../../../db.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: ../login.php");
    exit();
}

const TASK_REWARD = 70;
$user_id = $_SESSION['user_id'];
$topic_id = 16; // M√§√§rame teema numbri 16, nagu sinu n√§ites

$tasks = [
    1 => [
        'question' => "Mis on punkti koordinaadid tasandil?",
        'answer' => "Punkti koordinaadid on tema asukoht kahem√µ√µtmelises koordinaatide s√ºsteemis, v√§ljendatuna arvudega (x, y).",
        'choices' => [
            "Punkti koordinaadid on tema asukoht kolmem√µ√µtmelises koordinaatide s√ºsteemis, v√§ljendatuna arvudega (x, y, z).",
            "Punkti koordinaadid on tema asukoht kahem√µ√µtmelises koordinaatide s√ºsteemis, v√§ljendatuna arvudega (x, y).",
            "Punkti koordinaadid on kaugus koordinaatide alguspunktist."
        ]
    ],
    2 => [
        'question' => "Kuidas leida kahe punkti vaheline kaugus tasandil?",
        'answer' => "Kaugus punktide A(x1, y1) ja B(x2, y2) vahel arvutatakse valemiga: ‚àö((x2 - x1)¬≤ + (y2 - y1)¬≤).",
        'choices' => [
            "Kaugus punktide A(x1, y1) ja B(x2, y2) vahel arvutatakse valemiga: ‚àö((x2 - x1)¬≤ + (y2 - y1)¬≤).",
            "Kaugus punktide A(x1, y1) ja B(x2, y2) vahel on (x2 - x1) + (y2 - y1).",
            "Kaugus tasandil olevate punktide vahel s√µltub telgede vahelistest nurkadest."
        ]
    ],
    3 => [
        'question' => "Mis on sirged koordinaattasandil?",
        'answer' => "Sirge tasandil on punktide hulk, mis rahuldab lineaarv√µrrandit kujul ax + by + c = 0.",
        'choices' => [
            "Sirge tasandil on punktide hulk, mis rahuldab lineaarv√µrrandit kujul ax + by + c = 0.",
            "Sirge tasandil on k√µigi v√µimalike punktide kogum, millel on samad x-koordinaadid.",
            "Sirge tasandil on geomeetriline kujund l√µpmatute otstega."
        ]
    ],
    4 => [
        'question' => "Mis on sirge kaldenurk?",
        'answer' => "Sirge kaldenurk on v√§√§rtus, mis n√§itab sirge kalduvust v√µrreldes abstsissiteljega (x).",
        'choices' => [
            "Sirge kaldenurk on v√§√§rtus, mis n√§itab sirge kalduvust v√µrreldes abstsissiteljega (x).",
            "Sirge kaldenurk on nurk sirge ja ordinaattelje (y) vahel.",
            "Sirge kaldenurk on kaugus koordinaatide alguspunktist sirgeni."
        ]
    ],
    5 => [
        'question' => "Kuidas m√§√§rata kahe sirge l√µikepunkt?",
        'answer' => "Kahe sirge l√µikepunkt tasandil on punkt, mis rahuldab m√µlema sirge v√µrrandeid.",
        'choices' => [
            "Kahe sirge l√µikepunkt tasandil on punkt, mis rahuldab m√µlema sirge v√µrrandeid.",
            "Kahe sirge l√µikepunkt tasandil on punkt, millel on m√µlema sirge jaoks samad koordinaadid.",
            "Kahe sirge l√µikepunkt asub alati koordinaats√ºsteemi keskel."
        ]
    ],
    6 => [
        'question' => "Kuidas leida sirge v√µrrand kahe punkti j√§rgi?",
        'answer' => "Sirge v√µrrand, mis l√§bib kahte punkti (x1, y1) ja (x2, y2), on kujul: y - y1 = m(x - x1), kus m on kaldenurk.",
        'choices' => [
            "Sirge v√µrrand, mis l√§bib kahte punkti (x1, y1) ja (x2, y2), on kujul: y - y1 = m(x - x1), kus m on kaldenurk.",
            "Sirge v√µrrand on alati kujul y = mx + c, kus m on kaldenurk ja c on vaba liige.",
            "Sirge v√µrrandi saab v√§ljendada kahe punkti x-koordinaatide summaga."
        ]
    ],
    7 => [
        'question' => "Kuidas arvutada nurk kahe sirge vahel koordinaattasandil?",
        'answer' => "Nurk kahe sirge vahel arvutatakse valemiga: tg(Œ∏) = |(m1 - m2) / (1 + m1 * m2)|, kus m1 ja m2 on sirgete kaldenurgad.",
        'choices' => [
            "Nurk kahe sirge vahel arvutatakse valemiga: tg(Œ∏) = |(m1 - m2) / (1 + m1 * m2)|, kus m1 ja m2 on sirgete kaldenurgad.",
            "Nurk sirgete vahel v√µrdub nende kaldenurkade vahega.",
            "Nurk sirgete vahel on alati 90 kraadi."
        ]
    ],
];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $task_id = (int)$_POST['task_id'];
    $given = trim($_POST['given']);
    $solution = trim($_POST['solution']);
    $user_answer = trim($_POST['answer']);

    if (empty($given) || empty($solution) || empty($user_answer)) {
        $_SESSION['error_message'] = "K√µik v√§ljad peavad olema t√§idetud!";
        header("Location: topic{$topic_id}.php?task={$task_id}");
        exit();
    }

    $is_correct = ($user_answer === $tasks[$task_id]['answer']);
    $reward = 0;

    $stmt = $pdo->prepare("SELECT COUNT(*) FROM user_tasks WHERE user_id = ? AND topic_id = ? AND task_id = ? AND is_correct = 1");
    $stmt->execute([$user_id, $topic_id, $task_id]);
    $already_solved = $stmt->fetchColumn() > 0;

    if ($is_correct) {
        if (!$already_solved) {
            $reward = TASK_REWARD;
            $stmt = $pdo->prepare("UPDATE users SET coins = coins + ? WHERE id = ?");
            $stmt->execute([$reward, $user_id]);
            $_SESSION['success_message'] = "√ïige! Te teenisite {$reward} m√ºnti.";
        } else {
            $_SESSION['success_message'] = "√ïige! Kuid te olete selle √ºlesande juba lahendanud, m√ºnte ei lisatud.";
        }
    } else {
        $_SESSION['error_message'] = "‚ùå Vale vastus.";
    }

    $stmt = $pdo->prepare("INSERT INTO user_tasks (user_id, topic_id, task_id, given, solution, answer, is_correct, reward) 
                          VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
    $stmt->execute([$user_id, $topic_id, $task_id, $given, $solution, $user_answer, $is_correct, $reward]);

    header("Location: topic{$topic_id}.php?task={$task_id}");
    exit();
}

$current_task = isset($_GET['task']) ? (int)$_GET['task'] : 1;
if (!isset($tasks[$current_task])) {
    $current_task = 1;
}
?>

<!DOCTYPE html>
<html lang="et">
<head>
    <meta charset="UTF-8">
    <title>√úlesanded: Koordinaattasand - CyberMath</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body { background: linear-gradient(135deg, #f5f7fa, #c3cfe2); }
        .task-container {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 20px;
        }
        .form-section {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
        }
        .form-label { font-weight: 500; }
        .reward-badge {
            background-color: #00b894;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-weight: bold;
        }
        .task-nav {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        .task-number {
            font-size: 1.2rem;
            font-weight: 500;
        }
    </style>
</head>
<body class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary">üß© Koordinaattasand</h1>
        <a href="index.php" class="btn btn-outline-secondary">‚Üê Tagasi teemade juurde</a>
    </div>

<?php if (isset($_SESSION['error_message'])): ?>
    <div class="alert alert-danger mb-4">
        <?= $_SESSION['error_message']; unset($_SESSION['error_message']); ?>
    </div>
<?php endif; ?>

<?php if (isset($_SESSION['success_message'])): ?>
    <div class="alert alert-success mb-4">
        <?= $_SESSION['success_message']; unset($_SESSION['success_message']); ?>
    </div>
<?php endif; ?>

    <div class="task-nav">
        <div><span class="task-number">√úlesanne <?= $current_task ?> / <?= count($tasks) ?></span></div>
        <div>
            <?php if ($current_task > 1): ?>
                <a href="topic<?= $topic_id ?>.php?task=<?= $current_task - 1 ?>" class="btn btn-outline-primary btn-sm me-2">‚Üê Eelmine</a>
            <?php endif; ?>
            <?php if ($current_task < count($tasks)): ?>
                <a href="topic<?= $topic_id ?>.php?task=<?= $current_task + 1 ?>" class="btn btn-outline-primary btn-sm">J√§rgmine ‚Üí</a>
            <?php endif; ?>
        </div>
    </div>

    <div class="task-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3>√úlesanne <?= $current_task ?></h3>
            <span class="reward-badge">+<?= TASK_REWARD ?> m√ºnti</span>
        </div>

        <div class="mb-4">
            <h5><?= htmlspecialchars($tasks[$current_task]['question']) ?></h5>
        </div>

        <form method="post">
            <input type="hidden" name="task_id" value="<?= $current_task ?>">
            <div class="form-section">
                <label for="given" class="form-label">Antud:</label>
                <textarea class="form-control" id="given" name="given" rows="3" required></textarea>
            </div>
            <div class="form-section">
                <label for="solution" class="form-label">Lahendus:</label>
                <textarea class="form-control" id="solution" name="solution" rows="5" required></textarea>
            </div>
            <div class="form-section">
                <label for="answer" class="form-label">Vastus:</label>
                <select class="form-control" id="answer" name="answer" required>
                    <?php foreach ($tasks[$current_task]['choices'] as $choice): ?>
                        <option value="<?= htmlspecialchars($choice) ?>"><?= htmlspecialchars($choice) ?></option>
                    <?php endforeach; ?>
                </select>
            </div>
            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary">Saada vastus</button>
            </div>
        </form>
    </div>
</body>
</html>